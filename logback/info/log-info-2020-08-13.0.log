2020-08-13 16:35:40.512 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1299966: startup date [Thu Aug 13 16:35:40 CST 2020]; root of context hierarchy
2020-08-13 16:35:40.697 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:35:40.738 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$655d315d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:36:11.768 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@82b37c: startup date [Thu Aug 13 16:36:11 CST 2020]; root of context hierarchy
2020-08-13 16:36:12.075 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:36:12.121 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cede0a85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:36:14.781 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 16:36:14.800 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff8b52: startup date [Thu Aug 13 16:36:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@82b37c
2020-08-13 16:36:15.520 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 16:36:15.978 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 16:36:15.989 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:36:16.092 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2c40788] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:36:16.117 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cede0a85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:36:16.582 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 16:36:16.598 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 16:36:16.612 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 16:36:16.613 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 16:36:16.617 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [W:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;R:\XFTP\;R:\XSHELL\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;W:\jdk8\bin;W:\jdk8\jre\bin;W:\maven\apache-maven-3.5.4\bin;W:\mysql5.7\mysql-5.7.31-winx64\bin;R:\consul;R:\git\Git\cmd;R:\SVN\bin;R:\svnServer\bin;C:\Users\17538\AppData\Local\Microsoft\WindowsApps;;R:\idea\IntelliJ IDEA 2018.3.6\bin;;.]
2020-08-13 16:36:16.747 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 16:36:16.747 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1948 ms
2020-08-13 16:36:16.928 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 16:36:16.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 16:36:16.933 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 16:36:16.933 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 16:36:16.933 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 16:36:17.406 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-08-13 16:36:17.531 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2020-08-13 16:36:17.968 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 16:36:17.973 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 16:36:18.081 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:36:18.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff8b52: startup date [Thu Aug 13 16:36:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@82b37c
2020-08-13 16:36:18.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 16:36:18.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 16:36:18.406 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 16:36:18.408 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 16:36:18.409 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 16:36:18.449 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:36:18.449 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:36:18.894 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 16:36:23.485 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 16:36:23.497 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 16:36:23.498 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 16:36:23.498 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 16:36:23.501 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 16:36:23.513 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 16:36:23.522 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ff8b52,type=ConfigurationPropertiesRebinder]
2020-08-13 16:36:23.531 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 16:36:23.537 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 16:36:23.579 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 16:36:25.232 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 16:36:25.233 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 16:36:25.352 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 16:36:25.352 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 16:36:25.515 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:36:26.937 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 16:36:26.937 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 16:36:26.937 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 16:36:26.938 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 16:36:26.938 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 16:36:26.938 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 16:36:26.938 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 16:36:27.032 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 16:36:27.034 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 16:36:27.036 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 16:36:27.040 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597307787038 with initial instances count: 0
2020-08-13 16:36:27.044 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 16:36:27.045 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597307787045, current=UP, previous=STARTING]
2020-08-13 16:36:27.046 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 16:36:27.058 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 16:36:27.071 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 16:36:27.096 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 16:36:27.097 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 16:36:27.100 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 18.543 seconds (JVM running for 20.933)
2020-08-13 16:36:27.119 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 16:36:57.035 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-08-13 16:36:57.036 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 16:36:57.124 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 16:41:26.940 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:42:25.998 [http-nio-7001-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-08-13 16:42:25.998 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-08-13 16:42:26.040 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2020-08-13 16:42:26.720 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.720 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.720 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.720 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [0,  , 123456]
2020-08-13 16:42:26.824 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=0, username= , password=123456)
2020-08-13 16:42:26.825 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.825 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.825 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.826 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [1, , 123456]
2020-08-13 16:42:26.851 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=1, username=, password=123456)
2020-08-13 16:42:26.852 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.852 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.852 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.852 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [2, , 123456]
2020-08-13 16:42:26.856 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=2, username=, password=123456)
2020-08-13 16:42:26.857 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.857 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.857 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.857 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [3, , 123456]
2020-08-13 16:42:26.859 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=3, username=, password=123456)
2020-08-13 16:42:26.860 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.860 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.860 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.860 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [4, , 123456]
2020-08-13 16:42:26.861 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=4, username=, password=123456)
2020-08-13 16:42:26.862 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.862 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.862 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.862 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [5, , 123456]
2020-08-13 16:42:26.865 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=5, username=, password=123456)
2020-08-13 16:42:26.866 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.866 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.866 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.866 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [6, , 123456]
2020-08-13 16:42:26.868 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=6, username=, password=123456)
2020-08-13 16:42:26.869 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.869 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.869 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.869 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [7, , 123456]
2020-08-13 16:42:26.872 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=7, username=, password=123456)
2020-08-13 16:42:26.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [8, , 123456]
2020-08-13 16:42:26.877 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=8, username=, password=123456)
2020-08-13 16:42:26.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [9, 	, 123456]
2020-08-13 16:42:26.881 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=9, username=	, password=123456)
2020-08-13 16:42:26.882 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.882 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.882 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.883 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [10, 
, 123456]
2020-08-13 16:42:26.891 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=10, username=
, password=123456)
2020-08-13 16:42:26.894 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.895 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.897 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.899 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [11, , 123456]
2020-08-13 16:42:26.909 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=11, username=, password=123456)
2020-08-13 16:42:26.910 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.910 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.910 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.910 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [12, , 123456]
2020-08-13 16:42:26.912 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=12, username=, password=123456)
2020-08-13 16:42:26.913 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [13, , 123456]
2020-08-13 16:42:26.942 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=13, username=, password=123456)
2020-08-13 16:42:26.943 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.946 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.947 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.947 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [14, , 123456]
2020-08-13 16:42:26.953 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=14, username=, password=123456)
2020-08-13 16:42:26.958 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.959 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.959 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.959 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [15, , 123456]
2020-08-13 16:42:26.962 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=15, username=, password=123456)
2020-08-13 16:42:26.963 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.963 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.964 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.964 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [16, , 123456]
2020-08-13 16:42:26.966 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=16, username=, password=123456)
2020-08-13 16:42:26.969 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.970 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.970 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.971 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [17, , 123456]
2020-08-13 16:42:26.977 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=17, username=, password=123456)
2020-08-13 16:42:26.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [18, , 123456]
2020-08-13 16:42:26.980 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=18, username=, password=123456)
2020-08-13 16:42:26.981 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.981 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.981 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.981 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [19, , 123456]
2020-08-13 16:42:26.990 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=19, username=, password=123456)
2020-08-13 16:42:26.992 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.992 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.992 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.993 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [20, , 123456]
2020-08-13 16:42:26.997 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=20, username=, password=123456)
2020-08-13 16:42:26.998 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:26.998 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:26.998 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:26.999 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [21, , 123456]
2020-08-13 16:42:27.008 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=21, username=, password=123456)
2020-08-13 16:42:27.009 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.009 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.009 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.010 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [22, , 123456]
2020-08-13 16:42:27.012 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=22, username=, password=123456)
2020-08-13 16:42:27.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [23, , 123456]
2020-08-13 16:42:27.021 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=23, username=, password=123456)
2020-08-13 16:42:27.023 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.024 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.024 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.024 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [24, , 123456]
2020-08-13 16:42:27.027 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=24, username=, password=123456)
2020-08-13 16:42:27.028 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.028 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.028 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.028 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [25, , 123456]
2020-08-13 16:42:27.030 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=25, username=, password=123456)
2020-08-13 16:42:27.031 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.031 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.031 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.031 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [26, , 123456]
2020-08-13 16:42:27.035 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=26, username=, password=123456)
2020-08-13 16:42:27.039 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.039 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.039 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.040 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [27, , 123456]
2020-08-13 16:42:27.042 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=27, username=, password=123456)
2020-08-13 16:42:27.042 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.043 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.043 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.043 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [28, , 123456]
2020-08-13 16:42:27.044 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=28, username=, password=123456)
2020-08-13 16:42:27.045 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.045 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.046 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.046 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [29, , 123456]
2020-08-13 16:42:27.048 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=29, username=, password=123456)
2020-08-13 16:42:27.049 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.049 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.049 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.050 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [30, , 123456]
2020-08-13 16:42:27.055 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=30, username=, password=123456)
2020-08-13 16:42:27.057 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.057 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.057 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.057 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [31, , 123456]
2020-08-13 16:42:27.059 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=31, username=, password=123456)
2020-08-13 16:42:27.059 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.060 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.060 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.060 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [32,  , 123456]
2020-08-13 16:42:27.061 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=32, username= , password=123456)
2020-08-13 16:42:27.062 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.062 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.062 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.062 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [33, !, 123456]
2020-08-13 16:42:27.064 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=33, username=!, password=123456)
2020-08-13 16:42:27.065 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.065 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.065 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.065 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [34, ", 123456]
2020-08-13 16:42:27.067 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=34, username=", password=123456)
2020-08-13 16:42:27.073 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.073 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.073 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.074 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [35, #, 123456]
2020-08-13 16:42:27.077 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=35, username=#, password=123456)
2020-08-13 16:42:27.077 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.077 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.077 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.078 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [36, $, 123456]
2020-08-13 16:42:27.079 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=36, username=$, password=123456)
2020-08-13 16:42:27.080 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.080 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.080 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.080 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [37, %, 123456]
2020-08-13 16:42:27.082 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=37, username=%, password=123456)
2020-08-13 16:42:27.083 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.085 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.086 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.088 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [38, &, 123456]
2020-08-13 16:42:27.090 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=38, username=&, password=123456)
2020-08-13 16:42:27.091 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.092 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.092 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.092 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [39, ', 123456]
2020-08-13 16:42:27.093 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=39, username=', password=123456)
2020-08-13 16:42:27.094 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.094 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.094 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.094 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [40, (, 123456]
2020-08-13 16:42:27.096 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=40, username=(, password=123456)
2020-08-13 16:42:27.096 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.096 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.096 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.096 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [41, ), 123456]
2020-08-13 16:42:27.098 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=41, username=), password=123456)
2020-08-13 16:42:27.098 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.099 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.099 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.099 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [42, *, 123456]
2020-08-13 16:42:27.103 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=42, username=*, password=123456)
2020-08-13 16:42:27.105 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.106 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.106 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.107 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [43, +, 123456]
2020-08-13 16:42:27.109 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=43, username=+, password=123456)
2020-08-13 16:42:27.109 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.109 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.109 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.110 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [44, ,, 123456]
2020-08-13 16:42:27.111 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=44, username=,, password=123456)
2020-08-13 16:42:27.111 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.111 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.111 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.112 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [45, -, 123456]
2020-08-13 16:42:27.113 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=45, username=-, password=123456)
2020-08-13 16:42:27.114 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.115 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.115 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.115 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [46, ., 123456]
2020-08-13 16:42:27.119 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=46, username=., password=123456)
2020-08-13 16:42:27.121 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.121 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.121 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.121 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [47, /, 123456]
2020-08-13 16:42:27.123 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=47, username=/, password=123456)
2020-08-13 16:42:27.124 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.124 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.124 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.124 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [48, 0, 123456]
2020-08-13 16:42:27.126 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=48, username=0, password=123456)
2020-08-13 16:42:27.126 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.126 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.126 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.127 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [49, 1, 123456]
2020-08-13 16:42:27.129 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=49, username=1, password=123456)
2020-08-13 16:42:27.129 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.129 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.129 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.129 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [50, 2, 123456]
2020-08-13 16:42:27.131 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=50, username=2, password=123456)
2020-08-13 16:42:27.131 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.131 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.132 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.132 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [51, 3, 123456]
2020-08-13 16:42:27.139 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=51, username=3, password=123456)
2020-08-13 16:42:27.140 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.140 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.140 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.141 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [52, 4, 123456]
2020-08-13 16:42:27.142 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=52, username=4, password=123456)
2020-08-13 16:42:27.143 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.143 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.143 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.143 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [53, 5, 123456]
2020-08-13 16:42:27.146 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=53, username=5, password=123456)
2020-08-13 16:42:27.147 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.147 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.147 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.147 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [54, 6, 123456]
2020-08-13 16:42:27.149 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=54, username=6, password=123456)
2020-08-13 16:42:27.149 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.150 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.150 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.150 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [55, 7, 123456]
2020-08-13 16:42:27.152 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=55, username=7, password=123456)
2020-08-13 16:42:27.153 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.153 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.153 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.153 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [56, 8, 123456]
2020-08-13 16:42:27.155 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=56, username=8, password=123456)
2020-08-13 16:42:27.155 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.156 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.156 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.156 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [57, 9, 123456]
2020-08-13 16:42:27.158 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=57, username=9, password=123456)
2020-08-13 16:42:27.158 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.159 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.159 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.159 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [58, :, 123456]
2020-08-13 16:42:27.160 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=58, username=:, password=123456)
2020-08-13 16:42:27.161 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.161 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.161 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.161 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [59, ;, 123456]
2020-08-13 16:42:27.162 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=59, username=;, password=123456)
2020-08-13 16:42:27.163 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.163 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.163 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.163 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [60, <, 123456]
2020-08-13 16:42:27.164 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=60, username=<, password=123456)
2020-08-13 16:42:27.165 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.165 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.166 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.166 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [61, =, 123456]
2020-08-13 16:42:27.169 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=61, username==, password=123456)
2020-08-13 16:42:27.169 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.169 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.169 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.169 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [62, >, 123456]
2020-08-13 16:42:27.171 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=62, username=>, password=123456)
2020-08-13 16:42:27.171 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.171 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.171 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.172 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [63, ?, 123456]
2020-08-13 16:42:27.173 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=63, username=?, password=123456)
2020-08-13 16:42:27.174 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.174 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.174 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.174 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [64, @, 123456]
2020-08-13 16:42:27.175 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=64, username=@, password=123456)
2020-08-13 16:42:27.176 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.176 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.176 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.176 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [65, A, 123456]
2020-08-13 16:42:27.177 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=65, username=A, password=123456)
2020-08-13 16:42:27.178 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.178 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.178 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.178 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [66, B, 123456]
2020-08-13 16:42:27.180 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=66, username=B, password=123456)
2020-08-13 16:42:27.180 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.180 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.180 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.180 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [67, C, 123456]
2020-08-13 16:42:27.182 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=67, username=C, password=123456)
2020-08-13 16:42:27.182 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.183 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.183 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.183 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [68, D, 123456]
2020-08-13 16:42:27.184 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=68, username=D, password=123456)
2020-08-13 16:42:27.185 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.185 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.185 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.185 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [69, E, 123456]
2020-08-13 16:42:27.188 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=69, username=E, password=123456)
2020-08-13 16:42:27.188 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.188 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.188 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.188 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [70, F, 123456]
2020-08-13 16:42:27.189 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=70, username=F, password=123456)
2020-08-13 16:42:27.190 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.190 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.190 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.190 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [71, G, 123456]
2020-08-13 16:42:27.191 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=71, username=G, password=123456)
2020-08-13 16:42:27.192 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.192 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.192 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.192 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [72, H, 123456]
2020-08-13 16:42:27.193 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=72, username=H, password=123456)
2020-08-13 16:42:27.194 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.194 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.194 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.194 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [73, I, 123456]
2020-08-13 16:42:27.198 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=73, username=I, password=123456)
2020-08-13 16:42:27.199 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.200 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.200 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.200 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [74, J, 123456]
2020-08-13 16:42:27.202 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=74, username=J, password=123456)
2020-08-13 16:42:27.202 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.202 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.202 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.203 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [75, K, 123456]
2020-08-13 16:42:27.205 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=75, username=K, password=123456)
2020-08-13 16:42:27.206 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.206 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.206 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.206 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [76, L, 123456]
2020-08-13 16:42:27.208 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=76, username=L, password=123456)
2020-08-13 16:42:27.209 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.209 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.209 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.209 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [77, M, 123456]
2020-08-13 16:42:27.212 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=77, username=M, password=123456)
2020-08-13 16:42:27.213 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.213 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.213 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.213 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [78, N, 123456]
2020-08-13 16:42:27.218 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=78, username=N, password=123456)
2020-08-13 16:42:27.219 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.219 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.219 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.219 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [79, O, 123456]
2020-08-13 16:42:27.221 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=79, username=O, password=123456)
2020-08-13 16:42:27.223 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.223 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.223 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.223 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [80, P, 123456]
2020-08-13 16:42:27.225 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=80, username=P, password=123456)
2020-08-13 16:42:27.226 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.226 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.226 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.226 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [81, Q, 123456]
2020-08-13 16:42:27.228 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=81, username=Q, password=123456)
2020-08-13 16:42:27.229 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.229 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.229 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.229 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [82, R, 123456]
2020-08-13 16:42:27.230 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=82, username=R, password=123456)
2020-08-13 16:42:27.231 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.231 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.231 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.232 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [83, S, 123456]
2020-08-13 16:42:27.235 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=83, username=S, password=123456)
2020-08-13 16:42:27.236 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.236 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.236 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.236 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [84, T, 123456]
2020-08-13 16:42:27.238 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=84, username=T, password=123456)
2020-08-13 16:42:27.238 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.238 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.238 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.238 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [85, U, 123456]
2020-08-13 16:42:27.240 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=85, username=U, password=123456)
2020-08-13 16:42:27.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [86, V, 123456]
2020-08-13 16:42:27.241 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=86, username=V, password=123456)
2020-08-13 16:42:27.242 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.242 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.242 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.242 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [87, W, 123456]
2020-08-13 16:42:27.243 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=87, username=W, password=123456)
2020-08-13 16:42:27.243 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.243 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.243 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.243 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [88, X, 123456]
2020-08-13 16:42:27.244 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=88, username=X, password=123456)
2020-08-13 16:42:27.245 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.245 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.245 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.246 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [89, Y, 123456]
2020-08-13 16:42:27.247 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=89, username=Y, password=123456)
2020-08-13 16:42:27.248 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.248 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.248 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.248 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [90, Z, 123456]
2020-08-13 16:42:27.249 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=90, username=Z, password=123456)
2020-08-13 16:42:27.250 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.250 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.250 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.250 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [91, [, 123456]
2020-08-13 16:42:27.252 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=91, username=[, password=123456)
2020-08-13 16:42:27.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [92, \, 123456]
2020-08-13 16:42:27.254 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=92, username=\, password=123456)
2020-08-13 16:42:27.255 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.255 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.255 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.255 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [93, ], 123456]
2020-08-13 16:42:27.257 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=93, username=], password=123456)
2020-08-13 16:42:27.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.258 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [94, ^, 123456]
2020-08-13 16:42:27.259 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=94, username=^, password=123456)
2020-08-13 16:42:27.259 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.259 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.259 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.260 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [95, _, 123456]
2020-08-13 16:42:27.262 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=95, username=_, password=123456)
2020-08-13 16:42:27.262 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.262 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.263 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.263 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [96, `, 123456]
2020-08-13 16:42:27.264 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=96, username=`, password=123456)
2020-08-13 16:42:27.265 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.266 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.266 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.266 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [97, a, 123456]
2020-08-13 16:42:27.268 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=97, username=a, password=123456)
2020-08-13 16:42:27.269 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.269 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.269 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.269 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [98, b, 123456]
2020-08-13 16:42:27.270 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=98, username=b, password=123456)
2020-08-13 16:42:27.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 16:42:27.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 16:42:27.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5a908f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e77516, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a584ce])])
2020-08-13 16:42:27.276 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [99, c, 123456]
2020-08-13 16:42:27.278 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=99, username=c, password=123456)
2020-08-13 16:46:26.943 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:51:26.944 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:54:28.131 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8c0a8: startup date [Thu Aug 13 16:54:28 CST 2020]; root of context hierarchy
2020-08-13 16:54:28.316 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:54:28.348 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:54:30.706 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 16:54:30.717 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ca9f2e: startup date [Thu Aug 13 16:54:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8c0a8
2020-08-13 16:54:31.292 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 16:54:31.611 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 16:54:31.665 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:54:31.755 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50165a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:54:31.781 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:54:32.195 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 16:54:32.209 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 16:54:32.222 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 16:54:32.223 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 16:54:32.226 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [W:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;R:\XFTP\;R:\XSHELL\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;W:\jdk8\bin;W:\jdk8\jre\bin;W:\maven\apache-maven-3.5.4\bin;W:\mysql5.7\mysql-5.7.31-winx64\bin;R:\consul;R:\git\Git\cmd;R:\SVN\bin;R:\svnServer\bin;C:\Users\17538\AppData\Local\Microsoft\WindowsApps;;R:\idea\IntelliJ IDEA 2018.3.6\bin;;.]
2020-08-13 16:54:32.348 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 16:54:32.348 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1631 ms
2020-08-13 16:54:32.508 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 16:54:32.513 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 16:54:32.514 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 16:54:32.514 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 16:54:32.514 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 16:54:32.981 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-08-13 16:54:33.110 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2020-08-13 16:54:33.518 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 16:54:33.524 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 16:54:33.707 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:54:33.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ca9f2e: startup date [Thu Aug 13 16:54:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8c0a8
2020-08-13 16:54:34.043 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 16:54:34.046 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 16:54:34.046 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 16:54:34.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 16:54:34.049 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 16:54:34.088 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:54:34.088 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:54:34.490 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 16:54:39.041 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 16:54:39.050 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 16:54:39.051 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 16:54:39.052 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 16:54:39.055 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 16:54:39.066 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 16:54:39.076 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1ca9f2e,type=ConfigurationPropertiesRebinder]
2020-08-13 16:54:39.085 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 16:54:39.091 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 16:54:39.124 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 16:54:40.755 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 16:54:40.755 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 16:54:40.956 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 16:54:40.956 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 16:54:41.123 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:54:42.533 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 16:54:42.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 16:54:42.675 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 16:54:42.677 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 16:54:42.679 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 16:54:42.683 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597308882682 with initial instances count: 1
2020-08-13 16:54:42.687 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 16:54:42.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597308882688, current=UP, previous=STARTING]
2020-08-13 16:54:42.689 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 16:54:42.702 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 16:54:42.715 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 16:54:42.728 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 16:54:42.735 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 16:54:42.736 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 16:54:42.739 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 17.357 seconds (JVM running for 19.956)
2020-08-13 16:59:13.975 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@8c0a8: startup date [Thu Aug 13 16:54:28 CST 2020]; root of context hierarchy
2020-08-13 16:59:13.975 [Thread-8] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ca9f2e: startup date [Thu Aug 13 16:54:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8c0a8
2020-08-13 16:59:13.976 [Thread-8] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application sharding-test-service with eureka with status DOWN
2020-08-13 16:59:13.977 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 16:59:13.978 [Thread-8] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-08-13 16:59:13.980 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-08-13 16:59:13.987 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 16:59:13.988 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-08-13 16:59:13.993 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - deregister  status: 200
2020-08-13 16:59:14.004 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-08-13 16:59:14.005 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-08-13 16:59:14.006 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-08-13 16:59:14.055 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2020-08-13 16:59:14.095 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-08-13 16:59:14.096 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2020-08-13 16:59:14.101 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2020-08-13 16:59:18.018 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8182bc: startup date [Thu Aug 13 16:59:18 CST 2020]; root of context hierarchy
2020-08-13 16:59:18.038 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:59:18.039 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:59:20.216 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 16:59:20.219 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@152c721: startup date [Thu Aug 13 16:59:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8182bc
2020-08-13 16:59:20.778 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 16:59:20.878 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 16:59:20.884 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 16:59:20.900 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50165a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:59:20.903 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 16:59:21.033 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 16:59:21.034 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 16:59:21.034 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 16:59:21.034 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 16:59:21.062 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 16:59:21.063 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 844 ms
2020-08-13 16:59:21.093 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 16:59:21.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 16:59:21.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 16:59:21.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 16:59:21.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 16:59:21.163 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2020-08-13 16:59:21.179 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2020-08-13 16:59:21.341 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 16:59:21.368 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:59:21.441 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@152c721: startup date [Thu Aug 13 16:59:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8182bc
2020-08-13 16:59:21.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 16:59:21.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 16:59:21.454 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 16:59:21.455 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 16:59:21.456 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 16:59:21.467 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:59:21.467 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 16:59:21.543 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 16:59:25.916 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 16:59:25.922 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 16:59:25.922 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 16:59:25.923 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 16:59:25.925 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 16:59:25.927 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 16:59:25.929 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=152c721,type=ConfigurationPropertiesRebinder]
2020-08-13 16:59:25.934 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 16:59:25.935 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 16:59:25.938 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 16:59:25.941 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 16:59:25.941 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 16:59:25.941 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 16:59:25.941 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 16:59:26.002 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 16:59:26.052 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 16:59:26.058 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 16:59:26.058 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 16:59:26.059 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 16:59:26.061 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597309166061 with initial instances count: 1
2020-08-13 16:59:26.062 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 16:59:26.063 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597309166063, current=UP, previous=STARTING]
2020-08-13 16:59:26.063 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 16:59:26.072 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 16:59:26.073 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 16:59:26.077 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 16:59:26.083 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 16:59:26.083 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 16:59:26.084 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 10.295 seconds (JVM running for 303.302)
2020-08-13 16:59:26.087 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-08-13 17:04:26.054 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:09:22.093 [Thread-13] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@8182bc: startup date [Thu Aug 13 16:59:18 CST 2020]; root of context hierarchy
2020-08-13 17:09:22.093 [Thread-13] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@152c721: startup date [Thu Aug 13 16:59:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8182bc
2020-08-13 17:09:22.094 [Thread-13] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application sharding-test-service with eureka with status DOWN
2020-08-13 17:09:22.095 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:09:22.095 [Thread-13] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-08-13 17:09:22.096 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-08-13 17:09:22.102 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:09:22.103 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-08-13 17:09:22.109 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - deregister  status: 200
2020-08-13 17:09:22.117 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-08-13 17:09:22.117 [Thread-13] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-08-13 17:09:22.118 [Thread-13] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-08-13 17:09:22.119 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2020-08-13 17:09:22.120 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2020-08-13 17:09:22.120 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2020-08-13 17:09:22.121 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2020-08-13 17:09:26.182 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f34d79: startup date [Thu Aug 13 17:09:26 CST 2020]; root of context hierarchy
2020-08-13 17:09:26.195 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:09:26.196 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:09:28.438 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:09:28.440 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@128a96: startup date [Thu Aug 13 17:09:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f34d79
2020-08-13 17:09:28.838 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:09:28.973 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:09:28.978 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:09:28.998 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50165a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:09:29.002 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:09:29.178 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:09:29.179 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:09:29.179 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:09:29.180 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:09:29.208 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:09:29.209 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 769 ms
2020-08-13 17:09:29.244 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:09:29.245 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:09:29.245 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:09:29.245 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:09:29.245 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:09:29.345 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-13 17:09:29.354 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-13 17:10:52.394 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d8486d: startup date [Thu Aug 13 17:10:52 CST 2020]; root of context hierarchy
2020-08-13 17:10:52.407 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:10:52.408 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:10:54.820 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:10:54.821 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@509437: startup date [Thu Aug 13 17:10:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d8486d
2020-08-13 17:10:55.203 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:10:55.303 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:10:55.309 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:10:55.329 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50165a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:10:55.331 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c305d78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:10:55.462 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:10:55.463 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:10:55.463 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:10:55.463 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:10:55.492 [localhost-startStop-1] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:10:55.493 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 672 ms
2020-08-13 17:10:55.520 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:10:55.520 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:10:55.520 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:10:55.521 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:10:55.521 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:10:55.585 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2020-08-13 17:10:55.619 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2020-08-13 17:10:55.754 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:10:55.787 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:10:55.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@509437: startup date [Thu Aug 13 17:10:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d8486d
2020-08-13 17:10:55.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 17:10:55.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 17:10:55.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 17:10:55.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 17:10:55.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 17:10:55.891 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:10:55.891 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:10:55.986 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 17:11:00.298 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 17:11:00.302 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 17:11:00.302 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 17:11:00.303 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 17:11:00.304 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 17:11:00.307 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 17:11:00.310 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=509437,type=ConfigurationPropertiesRebinder]
2020-08-13 17:11:00.315 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 17:11:00.316 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 17:11:00.319 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 17:11:00.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 17:11:00.325 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 17:11:00.325 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 17:11:00.325 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 17:11:00.397 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:11:00.398 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:11:00.398 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:11:00.398 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:11:00.398 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:11:00.398 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:11:00.399 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 17:11:00.399 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:11:00.403 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:11:00.404 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 17:11:00.404 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 17:11:00.406 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597309860406 with initial instances count: 0
2020-08-13 17:11:00.408 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 17:11:00.408 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597309860408, current=UP, previous=STARTING]
2020-08-13 17:11:00.409 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:11:00.416 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:11:00.419 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 17:11:00.424 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 17:11:00.431 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 17:11:00.432 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 17:11:00.433 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 10.325 seconds (JVM running for 997.65)
2020-08-13 17:11:00.435 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-08-13 17:11:30.406 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:11:30.406 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:11:30.407 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:11:30.407 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:11:30.407 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:11:30.407 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-08-13 17:11:30.407 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:11:30.415 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:11:45.327 [http-nio-7001-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-08-13 17:11:45.327 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-08-13 17:11:45.364 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2020-08-13 17:11:46.171 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.172 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.172 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.172 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [0,  , 123456]
2020-08-13 17:11:46.219 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=0, username= , password=123456)
2020-08-13 17:11:46.220 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.220 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.220 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.221 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [1, , 123456]
2020-08-13 17:11:46.224 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=1, username=, password=123456)
2020-08-13 17:11:46.225 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.225 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.225 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.225 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [2, , 123456]
2020-08-13 17:11:46.239 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=2, username=, password=123456)
2020-08-13 17:11:46.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.240 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.241 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [3, , 123456]
2020-08-13 17:11:46.253 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=3, username=, password=123456)
2020-08-13 17:11:46.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.253 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.254 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.254 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [4, , 123456]
2020-08-13 17:11:46.256 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=4, username=, password=123456)
2020-08-13 17:11:46.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.257 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [5, , 123456]
2020-08-13 17:11:46.260 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=5, username=, password=123456)
2020-08-13 17:11:46.260 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.260 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.260 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.260 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [6, , 123456]
2020-08-13 17:11:46.263 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=6, username=, password=123456)
2020-08-13 17:11:46.264 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.264 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.264 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.264 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [7, , 123456]
2020-08-13 17:11:46.267 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=7, username=, password=123456)
2020-08-13 17:11:46.268 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.268 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.268 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.268 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [8, , 123456]
2020-08-13 17:11:46.270 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=8, username=, password=123456)
2020-08-13 17:11:46.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.271 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [9, 	, 123456]
2020-08-13 17:11:46.273 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=9, username=	, password=123456)
2020-08-13 17:11:46.274 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.274 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.274 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.274 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [10, 
, 123456]
2020-08-13 17:11:46.276 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=10, username=
, password=123456)
2020-08-13 17:11:46.277 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.277 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.277 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.277 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [11, , 123456]
2020-08-13 17:11:46.279 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=11, username=, password=123456)
2020-08-13 17:11:46.280 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.280 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.280 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.280 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [12, , 123456]
2020-08-13 17:11:46.282 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=12, username=, password=123456)
2020-08-13 17:11:46.283 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.283 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.283 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.283 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [13, , 123456]
2020-08-13 17:11:46.285 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=13, username=, password=123456)
2020-08-13 17:11:46.285 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.285 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.285 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.286 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [14, , 123456]
2020-08-13 17:11:46.288 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=14, username=, password=123456)
2020-08-13 17:11:46.290 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.290 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.290 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.290 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [15, , 123456]
2020-08-13 17:11:46.292 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=15, username=, password=123456)
2020-08-13 17:11:46.293 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.293 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.293 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.293 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [16, , 123456]
2020-08-13 17:11:46.295 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=16, username=, password=123456)
2020-08-13 17:11:46.296 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.296 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.296 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.296 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [17, , 123456]
2020-08-13 17:11:46.298 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=17, username=, password=123456)
2020-08-13 17:11:46.298 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.299 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.299 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.299 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [18, , 123456]
2020-08-13 17:11:46.301 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=18, username=, password=123456)
2020-08-13 17:11:46.301 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.301 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.302 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.302 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [19, , 123456]
2020-08-13 17:11:46.304 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=19, username=, password=123456)
2020-08-13 17:11:46.304 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.305 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.305 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.305 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [20, , 123456]
2020-08-13 17:11:46.313 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=20, username=, password=123456)
2020-08-13 17:11:46.313 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.313 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.313 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.314 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [21, , 123456]
2020-08-13 17:11:46.315 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=21, username=, password=123456)
2020-08-13 17:11:46.316 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.316 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.316 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.316 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [22, , 123456]
2020-08-13 17:11:46.319 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=22, username=, password=123456)
2020-08-13 17:11:46.320 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.320 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.320 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.320 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [23, , 123456]
2020-08-13 17:11:46.322 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=23, username=, password=123456)
2020-08-13 17:11:46.323 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.323 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.323 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.323 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [24, , 123456]
2020-08-13 17:11:46.325 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=24, username=, password=123456)
2020-08-13 17:11:46.326 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.326 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.327 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.327 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [25, , 123456]
2020-08-13 17:11:46.329 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=25, username=, password=123456)
2020-08-13 17:11:46.330 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.330 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.330 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.330 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [26, , 123456]
2020-08-13 17:11:46.332 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=26, username=, password=123456)
2020-08-13 17:11:46.333 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.333 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.333 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.333 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [27, , 123456]
2020-08-13 17:11:46.335 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=27, username=, password=123456)
2020-08-13 17:11:46.336 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.336 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.336 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.336 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [28, , 123456]
2020-08-13 17:11:46.338 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=28, username=, password=123456)
2020-08-13 17:11:46.338 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.338 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.338 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.338 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [29, , 123456]
2020-08-13 17:11:46.340 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=29, username=, password=123456)
2020-08-13 17:11:46.340 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.340 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.340 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.340 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [30, , 123456]
2020-08-13 17:11:46.342 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=30, username=, password=123456)
2020-08-13 17:11:46.342 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.342 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.342 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.343 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [31, , 123456]
2020-08-13 17:11:46.344 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=31, username=, password=123456)
2020-08-13 17:11:46.344 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.344 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.344 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.345 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [32,  , 123456]
2020-08-13 17:11:46.346 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=32, username= , password=123456)
2020-08-13 17:11:46.347 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.347 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.347 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.347 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [33, !, 123456]
2020-08-13 17:11:46.349 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=33, username=!, password=123456)
2020-08-13 17:11:46.350 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.350 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.350 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.350 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [34, ", 123456]
2020-08-13 17:11:46.352 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=34, username=", password=123456)
2020-08-13 17:11:46.353 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.353 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.353 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.353 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [35, #, 123456]
2020-08-13 17:11:46.356 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=35, username=#, password=123456)
2020-08-13 17:11:46.357 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.357 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.357 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.357 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [36, $, 123456]
2020-08-13 17:11:46.359 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=36, username=$, password=123456)
2020-08-13 17:11:46.360 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.360 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.360 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.360 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [37, %, 123456]
2020-08-13 17:11:46.361 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=37, username=%, password=123456)
2020-08-13 17:11:46.362 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.362 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.362 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.362 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [38, &, 123456]
2020-08-13 17:11:46.364 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=38, username=&, password=123456)
2020-08-13 17:11:46.364 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.364 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.364 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.364 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [39, ', 123456]
2020-08-13 17:11:46.366 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=39, username=', password=123456)
2020-08-13 17:11:46.366 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.366 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.366 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.366 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [40, (, 123456]
2020-08-13 17:11:46.368 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=40, username=(, password=123456)
2020-08-13 17:11:46.369 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.369 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.369 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.369 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [41, ), 123456]
2020-08-13 17:11:46.371 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=41, username=), password=123456)
2020-08-13 17:11:46.371 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.371 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.371 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.371 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [42, *, 123456]
2020-08-13 17:11:46.373 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=42, username=*, password=123456)
2020-08-13 17:11:46.373 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.373 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.373 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.373 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [43, +, 123456]
2020-08-13 17:11:46.381 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=43, username=+, password=123456)
2020-08-13 17:11:46.382 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.382 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.382 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.382 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [44, ,, 123456]
2020-08-13 17:11:46.385 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=44, username=,, password=123456)
2020-08-13 17:11:46.385 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.386 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.386 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.386 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [45, -, 123456]
2020-08-13 17:11:46.389 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=45, username=-, password=123456)
2020-08-13 17:11:46.389 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.389 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.389 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.390 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [46, ., 123456]
2020-08-13 17:11:46.391 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=46, username=., password=123456)
2020-08-13 17:11:46.392 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.392 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.392 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.392 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [47, /, 123456]
2020-08-13 17:11:46.393 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=47, username=/, password=123456)
2020-08-13 17:11:46.394 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.394 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.394 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.394 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [48, 0, 123456]
2020-08-13 17:11:46.396 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=48, username=0, password=123456)
2020-08-13 17:11:46.397 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.397 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.397 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.397 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [49, 1, 123456]
2020-08-13 17:11:46.398 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=49, username=1, password=123456)
2020-08-13 17:11:46.399 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.399 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.399 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.399 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [50, 2, 123456]
2020-08-13 17:11:46.401 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=50, username=2, password=123456)
2020-08-13 17:11:46.401 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.401 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.402 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.402 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [51, 3, 123456]
2020-08-13 17:11:46.403 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=51, username=3, password=123456)
2020-08-13 17:11:46.404 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.404 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.404 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.404 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [52, 4, 123456]
2020-08-13 17:11:46.405 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=52, username=4, password=123456)
2020-08-13 17:11:46.406 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.406 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.406 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.406 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [53, 5, 123456]
2020-08-13 17:11:46.409 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=53, username=5, password=123456)
2020-08-13 17:11:46.409 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.409 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.409 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.409 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [54, 6, 123456]
2020-08-13 17:11:46.411 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=54, username=6, password=123456)
2020-08-13 17:11:46.411 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.411 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.411 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.411 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [55, 7, 123456]
2020-08-13 17:11:46.413 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=55, username=7, password=123456)
2020-08-13 17:11:46.413 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.413 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.413 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.413 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [56, 8, 123456]
2020-08-13 17:11:46.415 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=56, username=8, password=123456)
2020-08-13 17:11:46.415 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.415 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.415 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.415 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [57, 9, 123456]
2020-08-13 17:11:46.417 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=57, username=9, password=123456)
2020-08-13 17:11:46.418 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.418 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.418 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.419 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [58, :, 123456]
2020-08-13 17:11:46.421 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=58, username=:, password=123456)
2020-08-13 17:11:46.422 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.422 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.422 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.422 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [59, ;, 123456]
2020-08-13 17:11:46.423 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=59, username=;, password=123456)
2020-08-13 17:11:46.424 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.424 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.424 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.424 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [60, <, 123456]
2020-08-13 17:11:46.425 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=60, username=<, password=123456)
2020-08-13 17:11:46.425 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.425 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.425 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.426 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [61, =, 123456]
2020-08-13 17:11:46.427 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=61, username==, password=123456)
2020-08-13 17:11:46.428 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.428 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.428 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.428 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [62, >, 123456]
2020-08-13 17:11:46.429 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=62, username=>, password=123456)
2020-08-13 17:11:46.430 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.430 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.430 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.430 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [63, ?, 123456]
2020-08-13 17:11:46.431 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=63, username=?, password=123456)
2020-08-13 17:11:46.431 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.431 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.431 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.432 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [64, @, 123456]
2020-08-13 17:11:46.433 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=64, username=@, password=123456)
2020-08-13 17:11:46.433 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.433 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.433 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.433 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [65, A, 123456]
2020-08-13 17:11:46.435 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=65, username=A, password=123456)
2020-08-13 17:11:46.436 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.436 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.436 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.436 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [66, B, 123456]
2020-08-13 17:11:46.438 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=66, username=B, password=123456)
2020-08-13 17:11:46.439 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.439 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.439 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.439 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [67, C, 123456]
2020-08-13 17:11:46.441 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=67, username=C, password=123456)
2020-08-13 17:11:46.442 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.442 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.442 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.442 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [68, D, 123456]
2020-08-13 17:11:46.445 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=68, username=D, password=123456)
2020-08-13 17:11:46.445 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.445 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.445 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.446 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [69, E, 123456]
2020-08-13 17:11:46.450 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=69, username=E, password=123456)
2020-08-13 17:11:46.451 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.451 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.451 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.451 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [70, F, 123456]
2020-08-13 17:11:46.454 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=70, username=F, password=123456)
2020-08-13 17:11:46.455 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.455 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.455 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.455 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [71, G, 123456]
2020-08-13 17:11:46.457 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=71, username=G, password=123456)
2020-08-13 17:11:46.458 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.458 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.458 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.458 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [72, H, 123456]
2020-08-13 17:11:46.461 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=72, username=H, password=123456)
2020-08-13 17:11:46.462 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.462 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.462 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.462 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [73, I, 123456]
2020-08-13 17:11:46.465 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=73, username=I, password=123456)
2020-08-13 17:11:46.466 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.467 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.467 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.468 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [74, J, 123456]
2020-08-13 17:11:46.471 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=74, username=J, password=123456)
2020-08-13 17:11:46.471 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.472 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.472 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.472 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [75, K, 123456]
2020-08-13 17:11:46.473 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=75, username=K, password=123456)
2020-08-13 17:11:46.474 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.474 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.474 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.474 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [76, L, 123456]
2020-08-13 17:11:46.476 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=76, username=L, password=123456)
2020-08-13 17:11:46.477 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.477 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.478 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.478 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [77, M, 123456]
2020-08-13 17:11:46.480 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=77, username=M, password=123456)
2020-08-13 17:11:46.481 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.482 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.482 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.482 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [78, N, 123456]
2020-08-13 17:11:46.487 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=78, username=N, password=123456)
2020-08-13 17:11:46.488 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.488 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.488 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.489 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [79, O, 123456]
2020-08-13 17:11:46.491 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=79, username=O, password=123456)
2020-08-13 17:11:46.491 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.491 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.492 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.492 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [80, P, 123456]
2020-08-13 17:11:46.494 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=80, username=P, password=123456)
2020-08-13 17:11:46.495 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.495 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.495 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.495 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [81, Q, 123456]
2020-08-13 17:11:46.498 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=81, username=Q, password=123456)
2020-08-13 17:11:46.500 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.501 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.502 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.503 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [82, R, 123456]
2020-08-13 17:11:46.506 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=82, username=R, password=123456)
2020-08-13 17:11:46.506 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.507 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.507 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.507 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [83, S, 123456]
2020-08-13 17:11:46.512 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=83, username=S, password=123456)
2020-08-13 17:11:46.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [84, T, 123456]
2020-08-13 17:11:46.515 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=84, username=T, password=123456)
2020-08-13 17:11:46.516 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.517 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.518 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.519 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [85, U, 123456]
2020-08-13 17:11:46.522 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=85, username=U, password=123456)
2020-08-13 17:11:46.523 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.523 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.523 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.523 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [86, V, 123456]
2020-08-13 17:11:46.526 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=86, username=V, password=123456)
2020-08-13 17:11:46.526 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.527 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.527 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.527 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [87, W, 123456]
2020-08-13 17:11:46.531 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=87, username=W, password=123456)
2020-08-13 17:11:46.531 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.531 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.531 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.532 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [88, X, 123456]
2020-08-13 17:11:46.535 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=88, username=X, password=123456)
2020-08-13 17:11:46.536 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.536 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.536 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.536 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [89, Y, 123456]
2020-08-13 17:11:46.539 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=89, username=Y, password=123456)
2020-08-13 17:11:46.539 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.539 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.539 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.539 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [90, Z, 123456]
2020-08-13 17:11:46.541 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=90, username=Z, password=123456)
2020-08-13 17:11:46.542 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.542 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.542 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.543 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [91, [, 123456]
2020-08-13 17:11:46.546 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=91, username=[, password=123456)
2020-08-13 17:11:46.546 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.546 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.547 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.547 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [92, \, 123456]
2020-08-13 17:11:46.552 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=92, username=\, password=123456)
2020-08-13 17:11:46.552 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.553 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.553 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.553 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [93, ], 123456]
2020-08-13 17:11:46.555 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=93, username=], password=123456)
2020-08-13 17:11:46.555 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.555 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.555 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.555 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [94, ^, 123456]
2020-08-13 17:11:46.561 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=94, username=^, password=123456)
2020-08-13 17:11:46.562 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.562 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.562 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.562 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [95, _, 123456]
2020-08-13 17:11:46.564 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=95, username=_, password=123456)
2020-08-13 17:11:46.565 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.565 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.565 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.565 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [96, `, 123456]
2020-08-13 17:11:46.570 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=96, username=`, password=123456)
2020-08-13 17:11:46.570 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.570 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.570 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.571 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [97, a, 123456]
2020-08-13 17:11:46.573 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=97, username=a, password=123456)
2020-08-13 17:11:46.574 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.574 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.574 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.574 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [98, b, 123456]
2020-08-13 17:11:46.576 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=98, username=b, password=123456)
2020-08-13 17:11:46.577 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:11:46.577 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:11:46.577 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@18000f9, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e69674, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@9e1fa6])])
2020-08-13 17:11:46.578 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [99, c, 123456]
2020-08-13 17:11:46.580 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=99, username=c, password=123456)
2020-08-13 17:12:26.992 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c66cfd: startup date [Thu Aug 13 17:12:26 CST 2020]; root of context hierarchy
2020-08-13 17:12:27.171 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:12:27.203 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40ce861b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:12:29.692 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:12:29.704 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@829fae: startup date [Thu Aug 13 17:12:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c66cfd
2020-08-13 17:12:30.481 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:12:30.844 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:12:30.905 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:12:31.005 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24b4831e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:12:31.034 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40ce861b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:12:31.490 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:12:31.502 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:12:31.524 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:12:31.525 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:12:31.533 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [W:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;R:\XFTP\;R:\XSHELL\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;W:\jdk8\bin;W:\jdk8\jre\bin;W:\maven\apache-maven-3.5.4\bin;W:\mysql5.7\mysql-5.7.31-winx64\bin;R:\consul;R:\git\Git\cmd;R:\SVN\bin;R:\svnServer\bin;C:\Users\17538\AppData\Local\Microsoft\WindowsApps;;R:\idea\IntelliJ IDEA 2018.3.6\bin;;.]
2020-08-13 17:12:31.702 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:12:31.703 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1999 ms
2020-08-13 17:12:31.887 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:12:31.892 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:12:31.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:12:31.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:12:31.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:12:32.377 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-08-13 17:12:32.509 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2020-08-13 17:12:33.042 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:12:33.048 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:12:33.161 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:12:33.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@829fae: startup date [Thu Aug 13 17:12:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c66cfd
2020-08-13 17:12:33.449 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 17:12:33.451 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 17:12:33.451 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 17:12:33.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 17:12:33.454 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 17:12:33.488 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:12:33.488 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:12:33.983 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 17:12:38.525 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 17:12:38.535 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 17:12:38.536 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 17:12:38.536 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 17:12:38.540 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 17:12:38.556 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 17:12:38.566 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=829fae,type=ConfigurationPropertiesRebinder]
2020-08-13 17:12:38.574 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 17:12:38.581 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 17:12:38.613 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 17:12:40.259 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 17:12:40.259 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 17:12:40.368 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 17:12:40.369 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 17:12:40.532 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 17:12:41.970 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:12:42.115 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:12:42.118 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 17:12:42.120 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 17:12:42.123 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597309962122 with initial instances count: 1
2020-08-13 17:12:42.128 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 17:12:42.128 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597309962128, current=UP, previous=STARTING]
2020-08-13 17:12:42.130 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:12:42.143 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 17:12:42.156 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 17:12:42.170 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:12:42.181 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 17:12:42.182 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 17:12:42.185 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 17.971 seconds (JVM running for 20.397)
2020-08-13 17:12:50.526 [http-nio-7001-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-08-13 17:12:50.526 [http-nio-7001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-08-13 17:12:50.558 [http-nio-7001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2020-08-13 17:12:51.162 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.162 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.162 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.162 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [0,  , 123456]
2020-08-13 17:12:51.184 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=0, username= , password=123456)
2020-08-13 17:12:51.185 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.186 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.186 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.186 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [1, , 123456]
2020-08-13 17:12:51.247 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=1, username=, password=123456)
2020-08-13 17:12:51.248 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.249 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.249 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.249 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [2, , 123456]
2020-08-13 17:12:51.252 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=2, username=, password=123456)
2020-08-13 17:12:51.252 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.252 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.252 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.252 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [3, , 123456]
2020-08-13 17:12:51.254 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=3, username=, password=123456)
2020-08-13 17:12:51.255 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.255 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.255 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.255 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [4, , 123456]
2020-08-13 17:12:51.257 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=4, username=, password=123456)
2020-08-13 17:12:51.257 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.257 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.257 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.258 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [5, , 123456]
2020-08-13 17:12:51.260 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=5, username=, password=123456)
2020-08-13 17:12:51.260 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.261 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.261 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.261 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [6, , 123456]
2020-08-13 17:12:51.262 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=6, username=, password=123456)
2020-08-13 17:12:51.263 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.263 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.263 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.263 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [7, , 123456]
2020-08-13 17:12:51.265 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=7, username=, password=123456)
2020-08-13 17:12:51.267 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.267 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.267 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.268 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [8, , 123456]
2020-08-13 17:12:51.270 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=8, username=, password=123456)
2020-08-13 17:12:51.271 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.271 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.271 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.271 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [9, 	, 123456]
2020-08-13 17:12:51.272 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=9, username=	, password=123456)
2020-08-13 17:12:51.273 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.273 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.273 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.273 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [10, 
, 123456]
2020-08-13 17:12:51.275 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=10, username=
, password=123456)
2020-08-13 17:12:51.275 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.275 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.275 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.275 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [11, , 123456]
2020-08-13 17:12:51.278 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=11, username=, password=123456)
2020-08-13 17:12:51.278 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.278 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.278 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.278 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [12, , 123456]
2020-08-13 17:12:51.280 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=12, username=, password=123456)
2020-08-13 17:12:51.280 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.280 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.280 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.280 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [13, , 123456]
2020-08-13 17:12:51.282 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=13, username=, password=123456)
2020-08-13 17:12:51.282 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.283 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.283 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.283 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [14, , 123456]
2020-08-13 17:12:51.285 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=14, username=, password=123456)
2020-08-13 17:12:51.287 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.287 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.287 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.287 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [15, , 123456]
2020-08-13 17:12:51.289 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=15, username=, password=123456)
2020-08-13 17:12:51.289 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.289 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.289 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.290 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [16, , 123456]
2020-08-13 17:12:51.291 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=16, username=, password=123456)
2020-08-13 17:12:51.291 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.292 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.292 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.292 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [17, , 123456]
2020-08-13 17:12:51.294 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=17, username=, password=123456)
2020-08-13 17:12:51.295 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.295 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.295 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.295 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [18, , 123456]
2020-08-13 17:12:51.297 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=18, username=, password=123456)
2020-08-13 17:12:51.297 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.297 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.297 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.297 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [19, , 123456]
2020-08-13 17:12:51.299 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=19, username=, password=123456)
2020-08-13 17:12:51.300 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.300 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.300 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.300 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [20, , 123456]
2020-08-13 17:12:51.302 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=20, username=, password=123456)
2020-08-13 17:12:51.302 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.302 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.302 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.303 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [21, , 123456]
2020-08-13 17:12:51.304 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=21, username=, password=123456)
2020-08-13 17:12:51.304 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.304 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.304 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.304 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [22, , 123456]
2020-08-13 17:12:51.305 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=22, username=, password=123456)
2020-08-13 17:12:51.306 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.306 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.306 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.306 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [23, , 123456]
2020-08-13 17:12:51.308 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=23, username=, password=123456)
2020-08-13 17:12:51.309 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.309 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.309 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.309 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [24, , 123456]
2020-08-13 17:12:51.310 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=24, username=, password=123456)
2020-08-13 17:12:51.311 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.311 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.311 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.311 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [25, , 123456]
2020-08-13 17:12:51.313 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=25, username=, password=123456)
2020-08-13 17:12:51.313 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.313 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.313 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.313 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [26, , 123456]
2020-08-13 17:12:51.315 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=26, username=, password=123456)
2020-08-13 17:12:51.316 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.316 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.316 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.316 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [27, , 123456]
2020-08-13 17:12:51.319 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=27, username=, password=123456)
2020-08-13 17:12:51.319 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.319 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.319 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.320 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [28, , 123456]
2020-08-13 17:12:51.321 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=28, username=, password=123456)
2020-08-13 17:12:51.321 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.321 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.321 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.322 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [29, , 123456]
2020-08-13 17:12:51.323 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=29, username=, password=123456)
2020-08-13 17:12:51.323 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.323 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.323 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.323 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [30, , 123456]
2020-08-13 17:12:51.324 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=30, username=, password=123456)
2020-08-13 17:12:51.325 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.325 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.325 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.325 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [31, , 123456]
2020-08-13 17:12:51.327 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=31, username=, password=123456)
2020-08-13 17:12:51.328 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.329 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.329 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.329 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [32,  , 123456]
2020-08-13 17:12:51.331 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=32, username= , password=123456)
2020-08-13 17:12:51.332 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.332 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.332 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.332 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [33, !, 123456]
2020-08-13 17:12:51.334 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=33, username=!, password=123456)
2020-08-13 17:12:51.335 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.335 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.335 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.335 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [34, ", 123456]
2020-08-13 17:12:51.337 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=34, username=", password=123456)
2020-08-13 17:12:51.338 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.338 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.338 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.338 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [35, #, 123456]
2020-08-13 17:12:51.341 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=35, username=#, password=123456)
2020-08-13 17:12:51.342 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.342 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.342 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.343 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [36, $, 123456]
2020-08-13 17:12:51.345 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=36, username=$, password=123456)
2020-08-13 17:12:51.345 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.346 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.346 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.346 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [37, %, 123456]
2020-08-13 17:12:51.348 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=37, username=%, password=123456)
2020-08-13 17:12:51.349 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.349 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.349 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.349 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [38, &, 123456]
2020-08-13 17:12:51.352 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=38, username=&, password=123456)
2020-08-13 17:12:51.353 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.353 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.353 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.353 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [39, ', 123456]
2020-08-13 17:12:51.356 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=39, username=', password=123456)
2020-08-13 17:12:51.357 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.357 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.357 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.357 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [40, (, 123456]
2020-08-13 17:12:51.358 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=40, username=(, password=123456)
2020-08-13 17:12:51.359 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.359 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.359 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.359 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [41, ), 123456]
2020-08-13 17:12:51.360 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=41, username=), password=123456)
2020-08-13 17:12:51.361 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.361 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.361 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.361 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [42, *, 123456]
2020-08-13 17:12:51.362 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=42, username=*, password=123456)
2020-08-13 17:12:51.362 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.362 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.362 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.363 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [43, +, 123456]
2020-08-13 17:12:51.364 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=43, username=+, password=123456)
2020-08-13 17:12:51.365 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.365 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.365 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.365 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [44, ,, 123456]
2020-08-13 17:12:51.368 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=44, username=,, password=123456)
2020-08-13 17:12:51.369 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.369 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.369 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.369 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [45, -, 123456]
2020-08-13 17:12:51.371 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=45, username=-, password=123456)
2020-08-13 17:12:51.371 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.371 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.371 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.372 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [46, ., 123456]
2020-08-13 17:12:51.373 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=46, username=., password=123456)
2020-08-13 17:12:51.373 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.373 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.373 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.374 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [47, /, 123456]
2020-08-13 17:12:51.375 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=47, username=/, password=123456)
2020-08-13 17:12:51.375 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.375 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.375 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.376 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [48, 0, 123456]
2020-08-13 17:12:51.377 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=48, username=0, password=123456)
2020-08-13 17:12:51.378 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.378 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.378 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.378 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [49, 1, 123456]
2020-08-13 17:12:51.380 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=49, username=1, password=123456)
2020-08-13 17:12:51.380 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.380 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.380 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.380 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [50, 2, 123456]
2020-08-13 17:12:51.382 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=50, username=2, password=123456)
2020-08-13 17:12:51.382 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.383 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.383 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.383 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [51, 3, 123456]
2020-08-13 17:12:51.385 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=51, username=3, password=123456)
2020-08-13 17:12:51.386 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.386 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.386 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.386 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [52, 4, 123456]
2020-08-13 17:12:51.388 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=52, username=4, password=123456)
2020-08-13 17:12:51.389 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.390 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.390 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.390 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [53, 5, 123456]
2020-08-13 17:12:51.395 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=53, username=5, password=123456)
2020-08-13 17:12:51.396 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.396 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.396 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.396 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [54, 6, 123456]
2020-08-13 17:12:51.398 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=54, username=6, password=123456)
2020-08-13 17:12:51.398 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.399 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.399 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.399 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [55, 7, 123456]
2020-08-13 17:12:51.400 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=55, username=7, password=123456)
2020-08-13 17:12:51.401 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.401 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.401 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.402 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [56, 8, 123456]
2020-08-13 17:12:51.404 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=56, username=8, password=123456)
2020-08-13 17:12:51.404 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.404 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.404 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.404 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [57, 9, 123456]
2020-08-13 17:12:51.406 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=57, username=9, password=123456)
2020-08-13 17:12:51.406 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.407 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.407 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.407 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [58, :, 123456]
2020-08-13 17:12:51.409 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=58, username=:, password=123456)
2020-08-13 17:12:51.409 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.409 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.409 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.409 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [59, ;, 123456]
2020-08-13 17:12:51.411 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=59, username=;, password=123456)
2020-08-13 17:12:51.411 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.411 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.411 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.412 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [60, <, 123456]
2020-08-13 17:12:51.413 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=60, username=<, password=123456)
2020-08-13 17:12:51.413 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.413 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.413 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.413 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [61, =, 123456]
2020-08-13 17:12:51.417 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=61, username==, password=123456)
2020-08-13 17:12:51.418 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.418 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.419 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.419 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [62, >, 123456]
2020-08-13 17:12:51.421 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=62, username=>, password=123456)
2020-08-13 17:12:51.422 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.422 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.422 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.422 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [63, ?, 123456]
2020-08-13 17:12:51.425 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=63, username=?, password=123456)
2020-08-13 17:12:51.426 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.426 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.426 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.426 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [64, @, 123456]
2020-08-13 17:12:51.428 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=64, username=@, password=123456)
2020-08-13 17:12:51.429 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.429 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.429 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.429 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [65, A, 123456]
2020-08-13 17:12:51.435 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=65, username=A, password=123456)
2020-08-13 17:12:51.436 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.437 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.437 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.438 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [66, B, 123456]
2020-08-13 17:12:51.440 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=66, username=B, password=123456)
2020-08-13 17:12:51.441 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.441 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.441 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.441 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [67, C, 123456]
2020-08-13 17:12:51.443 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=67, username=C, password=123456)
2020-08-13 17:12:51.443 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.443 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.443 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.443 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [68, D, 123456]
2020-08-13 17:12:51.445 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=68, username=D, password=123456)
2020-08-13 17:12:51.447 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.447 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.447 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.447 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [69, E, 123456]
2020-08-13 17:12:51.453 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=69, username=E, password=123456)
2020-08-13 17:12:51.454 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.454 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.454 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.455 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [70, F, 123456]
2020-08-13 17:12:51.457 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=70, username=F, password=123456)
2020-08-13 17:12:51.458 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.458 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.458 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.458 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [71, G, 123456]
2020-08-13 17:12:51.459 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=71, username=G, password=123456)
2020-08-13 17:12:51.460 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.460 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.460 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.460 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [72, H, 123456]
2020-08-13 17:12:51.463 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=72, username=H, password=123456)
2020-08-13 17:12:51.464 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.464 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.464 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.464 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [73, I, 123456]
2020-08-13 17:12:51.469 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=73, username=I, password=123456)
2020-08-13 17:12:51.471 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.471 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.471 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.471 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [74, J, 123456]
2020-08-13 17:12:51.473 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=74, username=J, password=123456)
2020-08-13 17:12:51.473 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.473 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.473 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.473 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [75, K, 123456]
2020-08-13 17:12:51.477 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=75, username=K, password=123456)
2020-08-13 17:12:51.477 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.477 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.478 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.478 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [76, L, 123456]
2020-08-13 17:12:51.480 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=76, username=L, password=123456)
2020-08-13 17:12:51.481 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.482 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.482 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.482 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [77, M, 123456]
2020-08-13 17:12:51.488 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=77, username=M, password=123456)
2020-08-13 17:12:51.489 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.489 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.489 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.490 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [78, N, 123456]
2020-08-13 17:12:51.493 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=78, username=N, password=123456)
2020-08-13 17:12:51.493 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.493 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.493 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.494 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [79, O, 123456]
2020-08-13 17:12:51.495 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=79, username=O, password=123456)
2020-08-13 17:12:51.496 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.496 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.497 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.497 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [80, P, 123456]
2020-08-13 17:12:51.504 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=80, username=P, password=123456)
2020-08-13 17:12:51.504 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.505 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.505 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.505 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [81, Q, 123456]
2020-08-13 17:12:51.507 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=81, username=Q, password=123456)
2020-08-13 17:12:51.508 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.508 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.508 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.508 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [82, R, 123456]
2020-08-13 17:12:51.511 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=82, username=R, password=123456)
2020-08-13 17:12:51.512 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.513 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.514 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.514 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [83, S, 123456]
2020-08-13 17:12:51.520 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=83, username=S, password=123456)
2020-08-13 17:12:51.521 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.521 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.521 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.521 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [84, T, 123456]
2020-08-13 17:12:51.523 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=84, username=T, password=123456)
2020-08-13 17:12:51.525 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.525 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.525 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.525 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [85, U, 123456]
2020-08-13 17:12:51.529 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=85, username=U, password=123456)
2020-08-13 17:12:51.530 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.530 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.530 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.530 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [86, V, 123456]
2020-08-13 17:12:51.539 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=86, username=V, password=123456)
2020-08-13 17:12:51.540 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.541 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.541 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.541 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [87, W, 123456]
2020-08-13 17:12:51.545 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=87, username=W, password=123456)
2020-08-13 17:12:51.546 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.546 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.546 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.546 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [88, X, 123456]
2020-08-13 17:12:51.549 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=88, username=X, password=123456)
2020-08-13 17:12:51.551 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.552 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.552 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.552 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [89, Y, 123456]
2020-08-13 17:12:51.554 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=89, username=Y, password=123456)
2020-08-13 17:12:51.554 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.554 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.554 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.555 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [90, Z, 123456]
2020-08-13 17:12:51.556 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=90, username=Z, password=123456)
2020-08-13 17:12:51.557 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.557 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.557 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.557 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [91, [, 123456]
2020-08-13 17:12:51.558 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=91, username=[, password=123456)
2020-08-13 17:12:51.559 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.559 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.559 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.559 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [92, \, 123456]
2020-08-13 17:12:51.560 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=92, username=\, password=123456)
2020-08-13 17:12:51.561 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.561 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.561 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.561 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [93, ], 123456]
2020-08-13 17:12:51.562 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=93, username=], password=123456)
2020-08-13 17:12:51.562 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.562 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.562 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.562 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [94, ^, 123456]
2020-08-13 17:12:51.564 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=94, username=^, password=123456)
2020-08-13 17:12:51.565 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.565 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.565 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.565 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [95, _, 123456]
2020-08-13 17:12:51.570 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=95, username=_, password=123456)
2020-08-13 17:12:51.570 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.570 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.571 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.571 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [96, `, 123456]
2020-08-13 17:12:51.574 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=96, username=`, password=123456)
2020-08-13 17:12:51.574 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.574 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.574 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.575 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [97, a, 123456]
2020-08-13 17:12:51.577 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=97, username=a, password=123456)
2020-08-13 17:12:51.577 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.577 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.577 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.578 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [98, b, 123456]
2020-08-13 17:12:51.579 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=98, username=b, password=123456)
2020-08-13 17:12:51.579 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:12:51.580 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:12:51.580 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d2b539, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@722105, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@394626])])
2020-08-13 17:12:51.580 [http-nio-7001-exec-1] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [99, c, 123456]
2020-08-13 17:12:51.581 [http-nio-7001-exec-1] INFO  com.sharding.Servicelmpl.UserServiceImpl - 鎴愬姛鎻掑叆------> User(user_id=99, username=c, password=123456)
2020-08-13 17:17:41.973 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:22:41.975 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:24:49.868 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@142c879: startup date [Thu Aug 13 17:24:49 CST 2020]; root of context hierarchy
2020-08-13 17:24:50.241 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:24:50.319 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:24:53.713 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:24:53.734 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@812784: startup date [Thu Aug 13 17:24:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c879
2020-08-13 17:24:54.934 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:24:55.727 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:24:55.738 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:24:55.898 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$926e4af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:24:55.934 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:24:56.607 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:24:56.634 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:24:56.651 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:24:56.652 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:24:56.656 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [W:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;R:\XFTP\;R:\XSHELL\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;W:\jdk8\bin;W:\jdk8\jre\bin;W:\maven\apache-maven-3.5.4\bin;W:\mysql5.7\mysql-5.7.31-winx64\bin;R:\consul;R:\git\Git\cmd;R:\SVN\bin;R:\svnServer\bin;C:\Users\17538\AppData\Local\Microsoft\WindowsApps;;R:\idea\IntelliJ IDEA 2018.3.6\bin;;.]
2020-08-13 17:24:56.845 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:24:56.846 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3112 ms
2020-08-13 17:24:57.063 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:24:57.072 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:24:57.073 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:24:57.073 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:24:57.073 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:24:57.773 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-08-13 17:24:57.956 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2020-08-13 17:24:58.659 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:24:58.669 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:24:58.844 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:24:59.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@812784: startup date [Thu Aug 13 17:24:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c879
2020-08-13 17:24:59.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 17:24:59.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 17:24:59.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 17:24:59.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 17:24:59.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 17:24:59.357 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:24:59.358 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:24:59.991 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 17:25:05.657 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 17:25:05.686 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 17:25:05.687 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 17:25:05.687 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 17:25:05.690 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 17:25:05.712 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 17:25:05.730 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=812784,type=ConfigurationPropertiesRebinder]
2020-08-13 17:25:05.750 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 17:25:05.762 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 17:25:05.832 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 17:25:07.884 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 17:25:07.885 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 17:25:08.061 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 17:25:08.062 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 17:25:08.359 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 17:25:10.217 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:25:10.483 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:25:10.486 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 17:25:10.488 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 17:25:10.491 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597310710490 with initial instances count: 1
2020-08-13 17:25:10.500 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 17:25:10.501 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597310710501, current=UP, previous=STARTING]
2020-08-13 17:25:10.505 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:25:10.530 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 17:25:10.562 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 17:25:10.612 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:25:10.627 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 17:25:10.638 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 17:25:10.652 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 25.734 seconds (JVM running for 30.153)
2020-08-13 17:28:22.203 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@142c879: startup date [Thu Aug 13 17:24:49 CST 2020]; root of context hierarchy
2020-08-13 17:28:22.204 [Thread-8] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@812784: startup date [Thu Aug 13 17:24:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c879
2020-08-13 17:28:22.205 [Thread-8] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application sharding-test-service with eureka with status DOWN
2020-08-13 17:28:22.206 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:28:22.210 [Thread-8] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-08-13 17:28:22.212 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-08-13 17:28:22.218 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:28:22.220 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-08-13 17:28:22.228 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - deregister  status: 200
2020-08-13 17:28:22.246 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-08-13 17:28:22.247 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-08-13 17:28:22.248 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-08-13 17:28:22.253 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2020-08-13 17:28:22.258 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-08-13 17:28:22.258 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2020-08-13 17:28:22.258 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2020-08-13 17:28:26.192 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c35fb2: startup date [Thu Aug 13 17:28:26 CST 2020]; root of context hierarchy
2020-08-13 17:28:26.209 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:28:26.210 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:28:28.372 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:28:28.375 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1823788: startup date [Thu Aug 13 17:28:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c35fb2
2020-08-13 17:28:28.734 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:28:28.834 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:28:28.839 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:28:28.854 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$926e4af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:28:28.857 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:28:28.983 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:28:28.984 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:28:28.984 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:28:28.984 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:28:29.010 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:28:29.011 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 636 ms
2020-08-13 17:28:29.040 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:28:29.040 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:28:29.040 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:28:29.040 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:28:29.040 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:28:29.101 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-13 17:28:29.110 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-13 17:38:11.105 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1977696: startup date [Thu Aug 13 17:38:11 CST 2020]; root of context hierarchy
2020-08-13 17:38:11.122 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:38:11.124 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:13.478 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:38:13.480 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@151412f: startup date [Thu Aug 13 17:38:13 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1977696
2020-08-13 17:38:13.971 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:38:14.078 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:38:14.084 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:38:14.098 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$926e4af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:14.101 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:14.230 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:38:14.231 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:38:14.231 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:38:14.231 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:38:14.259 [localhost-startStop-1] INFO  o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:38:14.259 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 779 ms
2020-08-13 17:38:14.286 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:38:14.286 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:38:14.286 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:38:14.287 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:38:14.287 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:38:14.353 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-13 17:38:14.362 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-13 17:38:48.690 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10ceedc: startup date [Thu Aug 13 17:38:48 CST 2020]; root of context hierarchy
2020-08-13 17:38:48.704 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:38:48.706 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:51.022 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:38:51.026 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc9ba9: startup date [Thu Aug 13 17:38:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10ceedc
2020-08-13 17:38:51.448 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:38:51.544 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:38:51.549 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:38:51.577 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$926e4af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:51.582 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:38:51.840 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:38:51.841 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:38:51.842 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:38:51.842 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:38:51.874 [localhost-startStop-1] INFO  o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:38:51.877 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 851 ms
2020-08-13 17:38:51.921 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:38:51.921 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:38:51.921 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:38:51.922 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:38:51.922 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:38:52.016 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-13 17:38:52.028 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-13 17:39:33.027 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c355ac: startup date [Thu Aug 13 17:39:33 CST 2020]; root of context hierarchy
2020-08-13 17:39:33.043 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:39:33.044 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:39:35.219 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:39:35.221 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1acf930: startup date [Thu Aug 13 17:39:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c355ac
2020-08-13 17:39:35.551 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:39:35.633 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:39:35.639 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:39:35.653 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$926e4af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:39:35.655 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae884df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:39:35.783 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:39:35.784 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:39:35.784 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:39:35.784 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:39:35.812 [localhost-startStop-1] INFO  o.a.c.c.ContainerBase.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:39:35.812 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 591 ms
2020-08-13 17:39:35.845 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:39:35.846 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:39:35.846 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:39:35.846 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:39:35.846 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:39:35.919 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2020-08-13 17:39:35.946 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2020-08-13 17:39:36.183 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:39:36.219 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:39:36.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1acf930: startup date [Thu Aug 13 17:39:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c355ac
2020-08-13 17:39:36.317 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 17:39:36.317 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 17:39:36.318 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 17:39:36.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 17:39:36.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 17:39:36.332 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:39:36.332 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:39:36.436 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 17:39:40.851 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 17:39:40.856 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 17:39:40.857 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 17:39:40.857 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 17:39:40.860 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 17:39:40.863 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 17:39:40.865 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1acf930,type=ConfigurationPropertiesRebinder]
2020-08-13 17:39:40.870 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 17:39:40.871 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 17:39:40.874 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 17:39:40.879 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 17:39:40.879 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 17:39:40.879 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 17:39:40.879 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 17:39:40.949 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 17:39:40.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:39:40.959 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:39:40.960 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 17:39:40.960 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 17:39:40.963 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597311580963 with initial instances count: 0
2020-08-13 17:39:40.964 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 17:39:40.964 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597311580964, current=UP, previous=STARTING]
2020-08-13 17:39:40.965 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:39:40.975 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:39:40.977 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 17:39:40.981 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 17:39:40.987 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 17:39:40.988 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 17:39:40.989 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 10.374 seconds (JVM running for 900.489)
2020-08-13 17:39:40.993 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-08-13 17:40:17.958 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a4d82e: startup date [Thu Aug 13 17:40:17 CST 2020]; root of context hierarchy
2020-08-13 17:40:18.153 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:40:18.187 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:40:20.534 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 17:40:20.549 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1571487: startup date [Thu Aug 13 17:40:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a4d82e
2020-08-13 17:40:21.133 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 17:40:21.490 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 17:40:21.500 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 17:40:21.590 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$982918da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:40:21.612 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 17:40:22.054 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 17:40:22.070 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 17:40:22.082 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 17:40:22.082 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 17:40:22.086 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [W:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;R:\XFTP\;R:\XSHELL\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;W:\jdk8\bin;W:\jdk8\jre\bin;W:\maven\apache-maven-3.5.4\bin;W:\mysql5.7\mysql-5.7.31-winx64\bin;R:\consul;R:\git\Git\cmd;R:\SVN\bin;R:\svnServer\bin;C:\Users\17538\AppData\Local\Microsoft\WindowsApps;;R:\idea\IntelliJ IDEA 2018.3.6\bin;;.]
2020-08-13 17:40:22.209 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 17:40:22.209 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1661 ms
2020-08-13 17:40:22.410 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 17:40:22.415 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 17:40:22.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 17:40:22.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 17:40:22.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 17:40:22.841 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-08-13 17:40:22.961 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} inited
2020-08-13 17:40:23.360 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:40:23.364 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 17:40:23.460 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:40:23.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1571487: startup date [Thu Aug 13 17:40:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a4d82e
2020-08-13 17:40:23.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 17:40:23.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 17:40:23.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 17:40:23.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 17:40:23.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 17:40:23.788 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:40:23.789 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 17:40:24.182 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 17:40:28.837 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 17:40:28.847 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 17:40:28.849 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 17:40:28.849 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 17:40:28.852 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 17:40:28.873 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 17:40:28.890 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1571487,type=ConfigurationPropertiesRebinder]
2020-08-13 17:40:28.899 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 17:40:28.906 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 17:40:28.953 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 17:40:30.750 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 17:40:30.750 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 17:40:30.923 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 17:40:30.923 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 17:40:31.134 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:40:32.598 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 17:40:32.598 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 17:40:32.598 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 17:40:32.598 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 17:40:32.598 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 17:40:32.599 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 17:40:32.599 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 17:40:32.817 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 17:40:32.825 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 17:40:32.829 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 17:40:32.835 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597311632832 with initial instances count: 1
2020-08-13 17:40:32.844 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 17:40:32.845 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597311632845, current=UP, previous=STARTING]
2020-08-13 17:40:32.847 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 17:40:32.882 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 17:40:32.912 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 17:40:32.927 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 17:40:32.947 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 17:40:32.949 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 17:40:32.955 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 17.842 seconds (JVM running for 20.863)
2020-08-13 17:40:37.828 [http-nio-7001-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-08-13 17:40:37.828 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-08-13 17:40:37.864 [http-nio-7001-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2020-08-13 17:40:38.512 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.513 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [0,  , 123456]
2020-08-13 17:40:38.607 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=0, username= , password=123456)
2020-08-13 17:40:38.608 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.608 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.608 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.608 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [1, , 123456]
2020-08-13 17:40:38.617 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=1, username=, password=123456)
2020-08-13 17:40:38.618 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.618 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.618 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.619 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [2, , 123456]
2020-08-13 17:40:38.622 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=2, username=, password=123456)
2020-08-13 17:40:38.623 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.623 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.623 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.624 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [3, , 123456]
2020-08-13 17:40:38.636 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=3, username=, password=123456)
2020-08-13 17:40:38.637 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.637 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.637 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.637 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [4, , 123456]
2020-08-13 17:40:38.644 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=4, username=, password=123456)
2020-08-13 17:40:38.645 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.645 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.645 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.645 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [5, , 123456]
2020-08-13 17:40:38.647 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=5, username=, password=123456)
2020-08-13 17:40:38.648 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.648 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.648 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.648 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [6, , 123456]
2020-08-13 17:40:38.650 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=6, username=, password=123456)
2020-08-13 17:40:38.651 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.651 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.651 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.651 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [7, , 123456]
2020-08-13 17:40:38.653 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=7, username=, password=123456)
2020-08-13 17:40:38.653 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.653 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.653 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.654 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [8, , 123456]
2020-08-13 17:40:38.656 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=8, username=, password=123456)
2020-08-13 17:40:38.657 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.657 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.657 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.657 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [9, 	, 123456]
2020-08-13 17:40:38.659 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=9, username=	, password=123456)
2020-08-13 17:40:38.659 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.659 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.659 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.659 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [10, 
, 123456]
2020-08-13 17:40:38.661 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=10, username=
, password=123456)
2020-08-13 17:40:38.661 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.661 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.662 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.662 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [11, , 123456]
2020-08-13 17:40:38.663 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=11, username=, password=123456)
2020-08-13 17:40:38.664 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.664 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.664 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.664 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [12, , 123456]
2020-08-13 17:40:38.665 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=12, username=, password=123456)
2020-08-13 17:40:38.666 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.666 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.666 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.666 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [13, , 123456]
2020-08-13 17:40:38.669 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=13, username=, password=123456)
2020-08-13 17:40:38.669 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.669 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.670 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.670 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [14, , 123456]
2020-08-13 17:40:38.672 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=14, username=, password=123456)
2020-08-13 17:40:38.674 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.674 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.674 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.674 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [15, , 123456]
2020-08-13 17:40:38.676 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=15, username=, password=123456)
2020-08-13 17:40:38.676 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.676 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.677 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.677 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [16, , 123456]
2020-08-13 17:40:38.678 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=16, username=, password=123456)
2020-08-13 17:40:38.679 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.679 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.679 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.679 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [17, , 123456]
2020-08-13 17:40:38.680 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=17, username=, password=123456)
2020-08-13 17:40:38.681 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.681 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.681 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.681 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [18, , 123456]
2020-08-13 17:40:38.683 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=18, username=, password=123456)
2020-08-13 17:40:38.683 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.683 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.683 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.683 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [19, , 123456]
2020-08-13 17:40:38.685 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=19, username=, password=123456)
2020-08-13 17:40:38.685 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.685 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.685 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.685 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [20, , 123456]
2020-08-13 17:40:38.687 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=20, username=, password=123456)
2020-08-13 17:40:38.689 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.689 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.689 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.689 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [21, , 123456]
2020-08-13 17:40:38.691 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=21, username=, password=123456)
2020-08-13 17:40:38.692 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.692 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.692 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.692 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [22, , 123456]
2020-08-13 17:40:38.693 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=22, username=, password=123456)
2020-08-13 17:40:38.694 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.694 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.694 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.694 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [23, , 123456]
2020-08-13 17:40:38.696 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=23, username=, password=123456)
2020-08-13 17:40:38.697 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.697 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.697 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.697 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [24, , 123456]
2020-08-13 17:40:38.699 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=24, username=, password=123456)
2020-08-13 17:40:38.699 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.699 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.700 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.700 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [25, , 123456]
2020-08-13 17:40:38.702 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=25, username=, password=123456)
2020-08-13 17:40:38.702 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.702 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.703 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.703 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [26, , 123456]
2020-08-13 17:40:38.705 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=26, username=, password=123456)
2020-08-13 17:40:38.705 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.705 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.705 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.706 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [27, , 123456]
2020-08-13 17:40:38.707 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=27, username=, password=123456)
2020-08-13 17:40:38.708 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.708 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.708 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.708 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [28, , 123456]
2020-08-13 17:40:38.710 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=28, username=, password=123456)
2020-08-13 17:40:38.710 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.710 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.710 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.711 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [29, , 123456]
2020-08-13 17:40:38.712 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=29, username=, password=123456)
2020-08-13 17:40:38.712 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.712 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.712 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.713 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [30, , 123456]
2020-08-13 17:40:38.715 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=30, username=, password=123456)
2020-08-13 17:40:38.716 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.716 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.716 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.716 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [31, , 123456]
2020-08-13 17:40:38.718 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=31, username=, password=123456)
2020-08-13 17:40:38.719 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.719 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.719 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.719 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [32,  , 123456]
2020-08-13 17:40:38.721 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=32, username= , password=123456)
2020-08-13 17:40:38.722 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.722 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.722 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.722 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [33, !, 123456]
2020-08-13 17:40:38.724 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=33, username=!, password=123456)
2020-08-13 17:40:38.724 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.725 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.725 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.725 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [34, ", 123456]
2020-08-13 17:40:38.726 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=34, username=", password=123456)
2020-08-13 17:40:38.727 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.727 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.727 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.727 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [35, #, 123456]
2020-08-13 17:40:38.728 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=35, username=#, password=123456)
2020-08-13 17:40:38.729 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.729 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.729 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.730 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [36, $, 123456]
2020-08-13 17:40:38.732 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=36, username=$, password=123456)
2020-08-13 17:40:38.732 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.733 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.733 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.733 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [37, %, 123456]
2020-08-13 17:40:38.734 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=37, username=%, password=123456)
2020-08-13 17:40:38.735 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.735 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.735 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.735 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [38, &, 123456]
2020-08-13 17:40:38.737 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=38, username=&, password=123456)
2020-08-13 17:40:38.737 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.738 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.738 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.738 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [39, ', 123456]
2020-08-13 17:40:38.740 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=39, username=', password=123456)
2020-08-13 17:40:38.741 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.741 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.741 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.741 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [40, (, 123456]
2020-08-13 17:40:38.742 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=40, username=(, password=123456)
2020-08-13 17:40:38.743 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.743 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.743 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.743 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [41, ), 123456]
2020-08-13 17:40:38.744 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=41, username=), password=123456)
2020-08-13 17:40:38.745 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.745 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.745 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.745 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [42, *, 123456]
2020-08-13 17:40:38.746 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=42, username=*, password=123456)
2020-08-13 17:40:38.747 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.747 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.747 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.747 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [43, +, 123456]
2020-08-13 17:40:38.749 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=43, username=+, password=123456)
2020-08-13 17:40:38.750 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.750 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.750 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.751 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [44, ,, 123456]
2020-08-13 17:40:38.754 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=44, username=,, password=123456)
2020-08-13 17:40:38.755 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.755 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.755 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.755 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [45, -, 123456]
2020-08-13 17:40:38.758 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=45, username=-, password=123456)
2020-08-13 17:40:38.759 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.759 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.760 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.760 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [46, ., 123456]
2020-08-13 17:40:38.762 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=46, username=., password=123456)
2020-08-13 17:40:38.763 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.763 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.763 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.763 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [47, /, 123456]
2020-08-13 17:40:38.765 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=47, username=/, password=123456)
2020-08-13 17:40:38.766 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.766 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.766 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.766 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [48, 0, 123456]
2020-08-13 17:40:38.768 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=48, username=0, password=123456)
2020-08-13 17:40:38.770 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.770 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.770 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.771 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [49, 1, 123456]
2020-08-13 17:40:38.773 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=49, username=1, password=123456)
2020-08-13 17:40:38.774 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.774 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.774 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.774 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding02 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [50, 2, 123456]
2020-08-13 17:40:38.776 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=50, username=2, password=123456)
2020-08-13 17:40:38.777 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.777 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.777 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.778 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [51, 3, 123456]
2020-08-13 17:40:38.783 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=51, username=3, password=123456)
2020-08-13 17:40:38.783 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.783 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.783 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.783 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [52, 4, 123456]
2020-08-13 17:40:38.788 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=52, username=4, password=123456)
2020-08-13 17:40:38.793 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.794 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.794 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.794 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [53, 5, 123456]
2020-08-13 17:40:38.800 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=53, username=5, password=123456)
2020-08-13 17:40:38.800 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.800 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.800 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.801 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [54, 6, 123456]
2020-08-13 17:40:38.808 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=54, username=6, password=123456)
2020-08-13 17:40:38.809 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.809 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.809 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.810 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [55, 7, 123456]
2020-08-13 17:40:38.813 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=55, username=7, password=123456)
2020-08-13 17:40:38.814 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.814 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.814 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.814 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [56, 8, 123456]
2020-08-13 17:40:38.817 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=56, username=8, password=123456)
2020-08-13 17:40:38.818 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.818 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.819 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.819 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [57, 9, 123456]
2020-08-13 17:40:38.828 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=57, username=9, password=123456)
2020-08-13 17:40:38.829 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.829 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.829 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.830 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [58, :, 123456]
2020-08-13 17:40:38.835 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=58, username=:, password=123456)
2020-08-13 17:40:38.836 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.837 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.837 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.838 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [59, ;, 123456]
2020-08-13 17:40:38.845 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=59, username=;, password=123456)
2020-08-13 17:40:38.845 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.845 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.845 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.846 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [60, <, 123456]
2020-08-13 17:40:38.850 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=60, username=<, password=123456)
2020-08-13 17:40:38.851 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.851 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.851 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.851 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [61, =, 123456]
2020-08-13 17:40:38.858 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=61, username==, password=123456)
2020-08-13 17:40:38.859 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.859 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.859 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.859 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [62, >, 123456]
2020-08-13 17:40:38.863 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=62, username=>, password=123456)
2020-08-13 17:40:38.864 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.864 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.864 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.864 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [63, ?, 123456]
2020-08-13 17:40:38.866 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=63, username=?, password=123456)
2020-08-13 17:40:38.867 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.867 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.867 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.867 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [64, @, 123456]
2020-08-13 17:40:38.873 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=64, username=@, password=123456)
2020-08-13 17:40:38.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.874 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [65, A, 123456]
2020-08-13 17:40:38.877 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=65, username=A, password=123456)
2020-08-13 17:40:38.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.878 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [66, B, 123456]
2020-08-13 17:40:38.881 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=66, username=B, password=123456)
2020-08-13 17:40:38.881 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.881 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.881 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.881 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [67, C, 123456]
2020-08-13 17:40:38.883 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=67, username=C, password=123456)
2020-08-13 17:40:38.884 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.884 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.884 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.884 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [68, D, 123456]
2020-08-13 17:40:38.885 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=68, username=D, password=123456)
2020-08-13 17:40:38.886 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.886 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.886 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.886 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [69, E, 123456]
2020-08-13 17:40:38.893 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=69, username=E, password=123456)
2020-08-13 17:40:38.893 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.893 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.893 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.893 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [70, F, 123456]
2020-08-13 17:40:38.896 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=70, username=F, password=123456)
2020-08-13 17:40:38.896 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.896 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.896 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.897 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [71, G, 123456]
2020-08-13 17:40:38.899 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=71, username=G, password=123456)
2020-08-13 17:40:38.900 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.900 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.900 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.900 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [72, H, 123456]
2020-08-13 17:40:38.902 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=72, username=H, password=123456)
2020-08-13 17:40:38.903 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.903 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.903 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.903 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [73, I, 123456]
2020-08-13 17:40:38.907 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=73, username=I, password=123456)
2020-08-13 17:40:38.907 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.907 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.907 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.907 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [74, J, 123456]
2020-08-13 17:40:38.910 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=74, username=J, password=123456)
2020-08-13 17:40:38.911 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.911 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.911 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.911 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [75, K, 123456]
2020-08-13 17:40:38.913 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=75, username=K, password=123456)
2020-08-13 17:40:38.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.914 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [76, L, 123456]
2020-08-13 17:40:38.917 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=76, username=L, password=123456)
2020-08-13 17:40:38.918 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.918 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.918 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.919 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [77, M, 123456]
2020-08-13 17:40:38.923 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=77, username=M, password=123456)
2020-08-13 17:40:38.924 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.924 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.924 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.924 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [78, N, 123456]
2020-08-13 17:40:38.927 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=78, username=N, password=123456)
2020-08-13 17:40:38.927 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.927 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.927 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.927 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [79, O, 123456]
2020-08-13 17:40:38.930 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=79, username=O, password=123456)
2020-08-13 17:40:38.930 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.930 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.930 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.930 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [80, P, 123456]
2020-08-13 17:40:38.933 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=80, username=P, password=123456)
2020-08-13 17:40:38.934 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.934 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.934 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.934 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [81, Q, 123456]
2020-08-13 17:40:38.936 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=81, username=Q, password=123456)
2020-08-13 17:40:38.937 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.937 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.937 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.937 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [82, R, 123456]
2020-08-13 17:40:38.941 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=82, username=R, password=123456)
2020-08-13 17:40:38.942 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.942 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.942 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.942 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [83, S, 123456]
2020-08-13 17:40:38.945 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=83, username=S, password=123456)
2020-08-13 17:40:38.945 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.945 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.945 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.945 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [84, T, 123456]
2020-08-13 17:40:38.948 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=84, username=T, password=123456)
2020-08-13 17:40:38.949 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.949 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.949 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.949 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [85, U, 123456]
2020-08-13 17:40:38.951 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=85, username=U, password=123456)
2020-08-13 17:40:38.952 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.952 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.952 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.952 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [86, V, 123456]
2020-08-13 17:40:38.961 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=86, username=V, password=123456)
2020-08-13 17:40:38.962 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.962 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.962 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.962 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [87, W, 123456]
2020-08-13 17:40:38.966 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=87, username=W, password=123456)
2020-08-13 17:40:38.966 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.966 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.966 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.967 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [88, X, 123456]
2020-08-13 17:40:38.972 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=88, username=X, password=123456)
2020-08-13 17:40:38.973 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.973 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.973 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.973 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [89, Y, 123456]
2020-08-13 17:40:38.977 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=89, username=Y, password=123456)
2020-08-13 17:40:38.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.978 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [90, Z, 123456]
2020-08-13 17:40:38.983 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=90, username=Z, password=123456)
2020-08-13 17:40:38.984 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.984 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.984 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.984 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [91, [, 123456]
2020-08-13 17:40:38.989 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=91, username=[, password=123456)
2020-08-13 17:40:38.990 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.990 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.990 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.991 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [92, \, 123456]
2020-08-13 17:40:38.994 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=92, username=\, password=123456)
2020-08-13 17:40:38.995 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:38.995 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:38.995 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:38.995 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [93, ], 123456]
2020-08-13 17:40:38.999 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=93, username=], password=123456)
2020-08-13 17:40:39.000 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.000 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.000 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.000 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [94, ^, 123456]
2020-08-13 17:40:39.006 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=94, username=^, password=123456)
2020-08-13 17:40:39.007 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.007 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.007 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.007 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [95, _, 123456]
2020-08-13 17:40:39.012 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=95, username=_, password=123456)
2020-08-13 17:40:39.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.013 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_0 (user_id, username, password) VALUES (?, ?, ?) ::: [96, `, 123456]
2020-08-13 17:40:39.016 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=96, username=`, password=123456)
2020-08-13 17:40:39.017 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.017 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.017 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.017 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_1 (user_id, username, password) VALUES (?, ?, ?) ::: [97, a, 123456]
2020-08-13 17:40:39.024 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=97, username=a, password=123456)
2020-08-13 17:40:39.025 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.026 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.026 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.026 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_2 (user_id, username, password) VALUES (?, ?, ?) ::: [98, b, 123456]
2020-08-13 17:40:39.029 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=98, username=b, password=123456)
2020-08-13 17:40:39.030 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Rule Type: sharding
2020-08-13 17:40:39.030 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Logic SQL: insert into user(user_id,username,password) values (?,?,?)
2020-08-13 17:40:39.030 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=user, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=16)], parametersIndex=3, logicSQL=insert into user(user_id,username,password) values (?,?,?)), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[user_id, username, password], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@20c100, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e9c3e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@c7e2cf])])
2020-08-13 17:40:39.030 [http-nio-7001-exec-2] INFO  ShardingSphere-SQL - Actual SQL: sharding01 ::: insert into user_3 (user_id, username, password) VALUES (?, ?, ?) ::: [99, c, 123456]
2020-08-13 17:40:39.033 [http-nio-7001-exec-2] INFO  com.sharding.Servicelmpl.UserServiceImpl - 成功插入------> User(user_id=99, username=c, password=123456)
2020-08-13 17:45:32.601 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:50:32.603 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 17:55:32.607 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:00:32.608 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:05:32.610 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:10:32.612 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:15:32.613 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:20:32.613 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:25:32.614 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:30:32.617 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:35:32.618 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:40:32.619 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:45:32.620 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:50:32.622 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 18:55:32.624 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:00:32.626 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:05:32.627 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:10:32.628 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:15:32.629 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:20:32.630 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:25:34.916 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:30:34.918 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:35:34.922 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:40:34.923 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:45:34.926 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:50:34.927 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:55:34.928 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:58:46.186 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@a4d82e: startup date [Thu Aug 13 17:40:17 CST 2020]; root of context hierarchy
2020-08-13 19:58:46.193 [Thread-8] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1571487: startup date [Thu Aug 13 17:40:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a4d82e
2020-08-13 19:58:46.194 [Thread-8] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application sharding-test-service with eureka with status DOWN
2020-08-13 19:58:46.194 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 19:58:46.198 [Thread-8] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-08-13 19:58:46.200 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-08-13 19:58:46.220 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 19:58:46.221 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-08-13 19:58:46.233 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - deregister  status: 200
2020-08-13 19:58:46.250 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-08-13 19:58:46.252 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-08-13 19:58:46.253 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-08-13 19:58:46.270 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2020-08-13 19:58:46.271 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-08-13 19:58:46.272 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closing ...
2020-08-13 19:58:46.272 [Thread-8] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed
2020-08-13 19:58:50.463 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10985c3: startup date [Thu Aug 13 19:58:50 CST 2020]; root of context hierarchy
2020-08-13 19:58:50.487 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 19:58:50.489 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:58:53.156 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 19:58:53.160 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c41d4c: startup date [Thu Aug 13 19:58:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10985c3
2020-08-13 19:58:53.746 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 19:58:53.901 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=3cb8f760-1b3b-3463-9e8f-6d926eda9ae2
2020-08-13 19:58:53.908 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 19:58:53.939 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$982918da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:58:53.943 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:58:54.133 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 19:58:54.134 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 19:58:54.134 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 19:58:54.134 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 19:58:54.180 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 19:58:54.181 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1021 ms
2020-08-13 19:58:54.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 19:58:54.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 19:58:54.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 19:58:54.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 19:58:54.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 19:58:54.274 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} inited
2020-08-13 19:58:54.308 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} inited
2020-08-13 19:58:54.510 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 19:58:54.568 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:58:54.799 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c41d4c: startup date [Thu Aug 13 19:58:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10985c3
2020-08-13 19:58:54.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 19:58:54.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 19:58:54.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 19:58:54.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 19:58:54.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 19:58:54.843 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:58:54.843 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:58:54.934 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 19:58:59.847 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 19:58:59.852 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 19:58:59.853 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 19:58:59.853 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 19:58:59.857 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 19:58:59.860 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 19:58:59.864 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1c41d4c,type=ConfigurationPropertiesRebinder]
2020-08-13 19:58:59.870 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 19:58:59.871 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 19:58:59.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 19:58:59.912 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 19:58:59.912 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 19:58:59.912 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 19:58:59.912 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 19:58:59.986 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 19:59:00.012 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 19:59:00.018 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 19:59:00.019 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 19:59:00.019 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 19:59:00.021 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597319940021 with initial instances count: 1
2020-08-13 19:59:00.023 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 19:59:00.023 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597319940023, current=UP, previous=STARTING]
2020-08-13 19:59:00.024 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 19:59:00.032 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 19:59:00.037 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 19:59:00.041 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 19:59:00.045 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 19:59:00.046 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 19:59:00.047 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 11.932 seconds (JVM running for 8327.956)
2020-08-13 19:59:00.050 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-08-13 19:59:09.452 [Thread-13] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@10985c3: startup date [Thu Aug 13 19:58:50 CST 2020]; root of context hierarchy
2020-08-13 19:59:09.453 [Thread-13] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c41d4c: startup date [Thu Aug 13 19:58:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10985c3
2020-08-13 19:59:09.453 [Thread-13] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application sharding-test-service with eureka with status DOWN
2020-08-13 19:59:09.454 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 19:59:09.455 [Thread-13] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-08-13 19:59:09.456 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-08-13 19:59:09.462 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 19:59:09.463 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-08-13 19:59:09.470 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - deregister  status: 200
2020-08-13 19:59:09.483 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-08-13 19:59:09.483 [Thread-13] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-08-13 19:59:09.483 [Thread-13] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-08-13 19:59:09.484 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closing ...
2020-08-13 19:59:09.539 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed
2020-08-13 19:59:09.540 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closing ...
2020-08-13 19:59:09.540 [Thread-13] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed
2020-08-13 19:59:14.693 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@681d36: startup date [Thu Aug 13 19:59:14 CST 2020]; root of context hierarchy
2020-08-13 19:59:14.707 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 19:59:14.709 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:59:16.939 [restartedMain] INFO  com.sharding.ShMain - No active profile set, falling back to default profiles: default
2020-08-13 19:59:16.942 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16dd494: startup date [Thu Aug 13 19:59:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681d36
2020-08-13 19:59:17.298 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=init; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class]]
2020-08-13 19:59:17.413 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=9f7ed34a-5f12-3d23-85e3-4eea48cee125
2020-08-13 19:59:17.425 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-08-13 19:59:17.458 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$982918da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:59:17.460 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4431bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-13 19:59:17.590 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 7001 (http)
2020-08-13 19:59:17.591 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-7001"]
2020-08-13 19:59:17.592 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-08-13 19:59:17.592 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-08-13 19:59:17.619 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-13 19:59:17.620 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 678 ms
2020-08-13 19:59:17.648 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-08-13 19:59:17.649 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-08-13 19:59:17.649 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-08-13 19:59:17.649 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-08-13 19:59:17.649 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2020-08-13 19:59:17.690 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-5} inited
2020-08-13 19:59:17.712 [restartedMain] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-6} inited
2020-08-13 19:59:17.844 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-13 19:59:17.860 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:59:17.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16dd494: startup date [Thu Aug 13 19:59:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681d36
2020-08-13 19:59:17.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/hello]}" onto public java.lang.String com.sharding.Controller.UserController.hello()
2020-08-13 19:59:17.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertusers],methods=[GET]}" onto public void com.sharding.Controller.UserController.InsertUsers()
2020-08-13 19:59:17.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/shardingtest/insertuser],methods=[POST]}" onto public com.sharding.mes.message<com.sharding.entity.User> com.sharding.Controller.UserController.InsertUser(com.sharding.entity.User)
2020-08-13 19:59:17.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-08-13 19:59:17.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-08-13 19:59:17.949 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:59:17.949 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-08-13 19:59:18.012 [restartedMain] INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-08-13 19:59:22.326 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-08-13 19:59:22.330 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-08-13 19:59:22.331 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-08-13 19:59:22.332 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-08-13 19:59:22.334 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-08-13 19:59:22.337 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-08-13 19:59:22.339 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=16dd494,type=ConfigurationPropertiesRebinder]
2020-08-13 19:59:22.344 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-08-13 19:59:22.345 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-08-13 19:59:22.348 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-08-13 19:59:22.362 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-08-13 19:59:22.363 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-08-13 19:59:22.363 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-08-13 19:59:22.363 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-08-13 19:59:22.420 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-08-13 19:59:22.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-08-13 19:59:22.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-08-13 19:59:22.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-08-13 19:59:22.429 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-13 19:59:22.430 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1597319962430 with initial instances count: 1
2020-08-13 19:59:22.432 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application sharding-test-service with eureka with status UP
2020-08-13 19:59:22.432 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1597319962432, current=UP, previous=STARTING]
2020-08-13 19:59:22.433 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001: registering service...
2020-08-13 19:59:22.442 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SHARDING-TEST-SERVICE/192.168.5.174:sharding-test-service:7001 - registration status: 204
2020-08-13 19:59:22.445 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-7001"]
2020-08-13 19:59:22.451 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-08-13 19:59:22.459 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 7001 (http) with context path ''
2020-08-13 19:59:22.460 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 7001
2020-08-13 19:59:22.461 [restartedMain] INFO  com.sharding.ShMain - Started ShMain in 10.236 seconds (JVM running for 8350.37)
2020-08-13 19:59:22.463 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-08-13 20:04:22.424 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
